// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  NOT_SEEN
  WATCHED
  SUITABLE
  NOT_SUITABLE
}

model Admin {
  id Int @default(autoincrement()) @id
  email String @unique
  username String @unique
  password String
  avatar String?
  phone_number Int?
  address String?
  enterpriseId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enterprise {
  id Int @default(autoincrement()) @id
  madn Int @unique
  mast Int @unique
  name String @unique
  address String
  email String @unique
  phone_number Int
  about_me String?
  image String?
  adminId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id Int @default(autoincrement()) @id
  username String @unique
  password String
  refreshToken String?
  fullName String?
  avatar String?
  email String @unique
  phone_number Int?
  address String?
  birthday String?
  gender Boolean?
  cv String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id Int @default(autoincrement()) @id
  title String
  enterpriseName String
  job_description String
  job_requirements String
  position String
  skills String
  salary String
  working_time String
  location String
  benefits String
  deadline_date String
  enterpriseId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Applications {
  id Int @default(autoincrement()) @id
  date_of_application String
  status Status @default(NOT_SEEN)
  score Int
  cv String
  userId Int
  jobId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
